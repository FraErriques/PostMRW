;;; -*- Mode: LISP; package:maxima; syntax:common-lisp; -*- 
(in-package :maxima)
(DSKSETQ $%I1
         '(($INTEGRATE) ((MQUOTIENT) 1. ((MPLUS) 1. ((MEXPT) $X 3.)))
           $X)) 
(ADDLABEL '$%I1) 
(DSKSETQ $%O1
         '((MPLUS SIMP)
           ((MTIMES SIMP) ((RAT SIMP) 1. 3.)
            ((%LOG SIMP) ((MPLUS SIMP) 1. $X)))
           ((MTIMES SIMP) ((MEXPT SIMP) 3. ((RAT SIMP) -1. 2.))
            ((%ATAN SIMP)
             ((MTIMES SIMP) ((MEXPT SIMP) 3. ((RAT SIMP) -1. 2.))
              ((MPLUS SIMP) -1. ((MTIMES SIMP RATSIMP) 2. $X)))))
           ((MTIMES SIMP) ((RAT SIMP) -1. 6.)
            ((%LOG SIMP)
             ((MPLUS SIMP) 1. ((MTIMES SIMP RATSIMP) -1. $X)
              ((MEXPT SIMP RATSIMP) $X 2.)))))) 
(ADDLABEL '$%O1) 
(DSKSETQ $%I2 '(($DEFINT) $X $X 2. 4.)) 
(ADDLABEL '$%I2) 
(DSKSETQ $%O2 6.) 
(ADDLABEL '$%O2) 
(DSKSETQ $%I3 '(($DEFINT) 1000. $X 2. 4.)) 
(ADDLABEL '$%I3) 
(DSKSETQ $%O3 2000.) 
(ADDLABEL '$%O3) 
(DSKSETQ $%I4 '(($DEFINT) 1000. $X 2. 4.)) 
(ADDLABEL '$%I4) 
(DSKSETQ $%O4 2000.) 
(ADDLABEL '$%O4) 
(DSKSETQ $%I5
         '(($PLOT2D) ((%SIN) $X) ((MLIST) $X 0. ((MTIMES) 2. 3.)))) 
(ADDLABEL '$%I5) 
(DSKSETQ $%O5 '((MLIST SIMP) "/home/fra/maxout.gnuplot_pipes")) 
(ADDLABEL '$%O5) 
(DSKSETQ $%I6 '(($DEFINT) 1000. $X 2. 4.)) 
(ADDLABEL '$%I6) 
(DSKSETQ $%O6 2000.) 
(ADDLABEL '$%O6) 
(DSKSETQ $%I7 '(($DEFINT) ((%SIN) $X) $X 2. 4.)) 
(ADDLABEL '$%I7) 
(DSKSETQ $%O7
         '((MPLUS SIMP) ((%COS SIMP) 2.)
           ((MTIMES SIMP RATSIMP) -1. ((%COS SIMP) 4.)))) 
(ADDLABEL '$%O7) 
(MDEFPROP $NSET (NIL $VERSION 1.21) $PROPS) 
(ADD2LNC '$NSET $PROPS) 
(DEFPROP ${ %{ VERB) 
(DEFPROP ${ "{" OP) 
(SETF (GETHASH "{" *OPR-TABLE*) '${) 
(ADD2LNC '"{" $PROPS) 
(DEFINE-SYMBOL '"{") 
(SETQ *MOPL* (CONS '"{" *MOPL*)) 
(DEFPROP ${ DIMENSION-MATCH DIMENSION) 
(DEFPROP ${ ((#\{) #\}) DISSYM) 
(DEFPROP ${ MSIZE-MATCHFIX GRIND) 
(DEFPROP ${ 200. LBP) 
(DEFPROP ${ PARSE-MATCHFIX NUD) 
(DEFPROP %{ DIMENSION-MATCH DIMENSION) 
(DEFPROP %{ ((#\{) #\}) DISSYM) 
(DEFPROP ${ $} MATCH) 
(DEFPROP $} "}" OP) 
(SETF (GETHASH "}" *OPR-TABLE*) '$}) 
(ADD2LNC '"}" $PROPS) 
(DEFINE-SYMBOL '"}") 
(SETQ *MOPL* (CONS '"}" *MOPL*)) 
(DEFPROP $} 5. LBP) 
(DEFPROP $} #<compiled-function DELIM-ERR> NUD) 
(DEFPROP $} #<compiled-function ERB-ERR> LED) 
(DEFPROP %{ ${ NOUN) 
(MDEFPROP $TRYLEVEL (NIL $MAXMIN 1.) $PROPS) 
(ADD2LNC '$TRYLEVEL $PROPS) 
(MDEFPROP $MAXMIN (NIL $VERSION 1.) $PROPS) 
(ADD2LNC '$MAXMIN $PROPS) 
(MDEFPROP $NUMMOD (NIL $VERSION 3.) $PROPS) 
(ADD2LNC '$NUMMOD $PROPS) 
(DEFPROP $CONJUGATE SIMP-CONJUGATE OPERATORS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(MDEFPROP $CONJUGATE (NIL $VERSION 1.) $PROPS) 
(ADD2LNC '$CONJUGATE $PROPS) 
(DEFPROP %ERF_GENERALIZED $ERF_GENERALIZED NOUN) 
(DEFPROP %ERF_GENERALIZED SIMP-ERF-GENERALIZED OPERATORS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T OPERS) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP %ERF_GENERALIZED T $ANTISYMMETRIC) 
(ADD2LNC '%ERF_GENERALIZED $PROPS) 
(DEFPROP $ERF_GENERALIZED %ERF_GENERALIZED VERB) 
(DEFPROP $BETA SIMPBETA OPERATORS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T OPERS) 
(ADD2LNC '$BETA $PROPS) 
(DEFPROP $BETA T $SYMMETRIC) 
(ADD2LNC '$BETA $PROPS) 
(SETQ $LINENUM 8.) 
(SETQ VARLIST (APPEND VARLIST '(((%COS SIMP) ((MPLUS SIMP) 2. $X))))) 
(SETQ $RATVARS (CONS '(MLIST SIMP) VARLIST)) 
(ADD2LNC '$RATVARS $MYOPTIONS) 
(SETQ *ALPHABET* (NCONC '(#\_ #\%) *ALPHABET*)) 
(ADD2LNC '$INTEGERVALUED $FEATURES) 