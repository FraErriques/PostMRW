<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</line>
</preamble>

<pid>24089</pid>
<ppid>23954</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/patty/src/GitHubSandBox/PostMRW/TestConsole/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</exe>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.036 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:08:05.588 </time>
</status>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are definitely lost in loss record 6 of 27</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x117F12</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::ConfigurationService::getValue(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/ConfigurationService</dir>
      <file>ConfigurationService.cpp</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x111151</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::SinkFs::SinkFs()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogSinkFs</dir>
      <file>SinkFs.cpp</file>
      <line>101</line>
    </frame>
    <frame>
      <ip>0x10FB39</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::TSingleton&lt;Common::SinkFs&gt;::instance()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap/../TSingleton</dir>
      <file>Singleton.h</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x10D7D7</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::LogWrappers::SectionOpen(char const*, int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap</dir>
      <file>LogFs_wrap.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x10CFA8</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>29</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are definitely lost in loss record 7 of 27</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x117F12</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::ConfigurationService::getValue(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/ConfigurationService</dir>
      <file>ConfigurationService.cpp</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x1111BB</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::SinkFs::SinkFs()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogSinkFs</dir>
      <file>SinkFs.cpp</file>
      <line>102</line>
    </frame>
    <frame>
      <ip>0x10FB39</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::TSingleton&lt;Common::SinkFs&gt;::instance()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap/../TSingleton</dir>
      <file>Singleton.h</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x10D7D7</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::LogWrappers::SectionOpen(char const*, int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap</dir>
      <file>LogFs_wrap.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x10CFA8</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>29</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>32 bytes in 1 blocks are definitely lost in loss record 8 of 27</text>
    <leakedbytes>32</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x117F12</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::ConfigurationService::getValue(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/ConfigurationService</dir>
      <file>ConfigurationService.cpp</file>
      <line>248</line>
    </frame>
    <frame>
      <ip>0x111225</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::SinkFs::SinkFs()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogSinkFs</dir>
      <file>SinkFs.cpp</file>
      <line>103</line>
    </frame>
    <frame>
      <ip>0x10FB39</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::TSingleton&lt;Common::SinkFs&gt;::instance()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap/../TSingleton</dir>
      <file>Singleton.h</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x10D7D7</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::LogWrappers::SectionOpen(char const*, int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap</dir>
      <file>LogFs_wrap.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x10CFA8</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>29</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x12</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>294 (72 direct, 222 indirect) bytes in 1 blocks are definitely lost in loss record 19 of 27</text>
    <leakedbytes>294</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x11D479</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::newDeal_dumpTailReaderByChar(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>396</line>
    </frame>
    <frame>
      <ip>0x11C101</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::SequentialCalcInterface(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>80</line>
    </frame>
    <frame>
      <ip>0x10D29F</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Test_Unit_CantierePrimes::sequentialDump(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>Test_Unit_CantierePrimes.cpp</file>
      <line>22</line>
    </frame>
    <frame>
      <ip>0x10CFD7</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>34</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x13</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>302 (24 direct, 278 indirect) bytes in 1 blocks are definitely lost in loss record 20 of 27</text>
    <leakedbytes>302</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x11760E</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::ConfigurationService::ConfigurationService(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/ConfigurationService</dir>
      <file>ConfigurationService.cpp</file>
      <line>119</line>
    </frame>
    <frame>
      <ip>0x1110EF</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::SinkFs::SinkFs()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogSinkFs</dir>
      <file>SinkFs.cpp</file>
      <line>99</line>
    </frame>
    <frame>
      <ip>0x10FB39</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::TSingleton&lt;Common::SinkFs&gt;::instance()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap/../TSingleton</dir>
      <file>Singleton.h</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x10D7D7</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::LogWrappers::SectionOpen(char const*, int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/LogFs_wrap</dir>
      <file>LogFs_wrap.cpp</file>
      <line>30</line>
    </frame>
    <frame>
      <ip>0x10CFA8</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>29</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x14</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>367 (24 direct, 343 indirect) bytes in 1 blocks are definitely lost in loss record 21 of 27</text>
    <leakedbytes>367</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x11760E</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::ConfigurationService::ConfigurationService(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/ConfigurationService</dir>
      <file>ConfigurationService.cpp</file>
      <line>119</line>
    </frame>
    <frame>
      <ip>0x11CD08</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::getPrimeDumpFullPath(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*) const</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>286</line>
    </frame>
    <frame>
      <ip>0x11CB2C</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::feedDumpPath[abi:cxx11]()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>266</line>
    </frame>
    <frame>
      <ip>0x11C02E</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::Primes(unsigned int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>42</line>
    </frame>
    <frame>
      <ip>0x10D1B5</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Test_Unit_CantierePrimes::Test_Unit_CantierePrimes(unsigned int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>Test_Unit_CantierePrimes.cpp</file>
      <line>5</line>
    </frame>
    <frame>
      <ip>0x10CFC2</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x15</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>367 (24 direct, 343 indirect) bytes in 1 blocks are definitely lost in loss record 22 of 27</text>
    <leakedbytes>367</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x11760E</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::ConfigurationService::ConfigurationService(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/ConfigurationService</dir>
      <file>ConfigurationService.cpp</file>
      <line>119</line>
    </frame>
    <frame>
      <ip>0x11CD08</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::getPrimeDumpFullPath(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*) const</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>286</line>
    </frame>
    <frame>
      <ip>0x11CC28</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::feed_CustomDumpPath[abi:cxx11]()</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>277</line>
    </frame>
    <frame>
      <ip>0x11C051</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::Primes(unsigned int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>53</line>
    </frame>
    <frame>
      <ip>0x10D1B5</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Test_Unit_CantierePrimes::Test_Unit_CantierePrimes(unsigned int)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>Test_Unit_CantierePrimes.cpp</file>
      <line>5</line>
    </frame>
    <frame>
      <ip>0x10CFC2</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>32</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x16</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>384 bytes in 12 blocks are definitely lost in loss record 23 of 27</text>
    <leakedbytes>384</leakedbytes>
    <leakedblocks>12</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x116980</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Common::StrManipul::uLongLongToString[abi:cxx11](unsigned long long const&amp;)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Common/StringBuilder</dir>
      <file>StringBuilder.cpp</file>
      <line>256</line>
    </frame>
    <frame>
      <ip>0x11F256</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::Bisection(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>859</line>
    </frame>
    <frame>
      <ip>0x11F98B</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::operator[](unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>1006</line>
    </frame>
    <frame>
      <ip>0x10D3FA</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Test_Unit_CantierePrimes::readBy_OperatorSquares(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>Test_Unit_CantierePrimes.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x10D01C</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>39</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x17</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>384 bytes in 12 blocks are definitely lost in loss record 24 of 27</text>
    <leakedbytes>384</leakedbytes>
    <leakedblocks>12</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483BE63</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x11EACD</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::acquireNextRecord(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>695</line>
    </frame>
    <frame>
      <ip>0x11F3C6</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::Bisection(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>881</line>
    </frame>
    <frame>
      <ip>0x11F98B</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::operator[](unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>1006</line>
    </frame>
    <frame>
      <ip>0x10D3FA</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Test_Unit_CantierePrimes::readBy_OperatorSquares(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>Test_Unit_CantierePrimes.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x10D01C</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>39</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x1a</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>1,344 bytes in 84 blocks are definitely lost in loss record 27 of 27</text>
    <leakedbytes>1344</leakedbytes>
    <leakedblocks>84</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x483C583</ip>
      <obj>/usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new[](unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x11E0BB</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::newDeal_recoverDumpTail(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, int*)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>560</line>
    </frame>
    <frame>
      <ip>0x11EAA6</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::acquireNextRecord(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>692</line>
    </frame>
    <frame>
      <ip>0x11F3C6</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::Bisection(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>881</line>
    </frame>
    <frame>
      <ip>0x11F98B</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Cantiere_Primes_2022September01_::Primes::operator[](unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/Entity/PrimesFinder</dir>
      <file>Cantiere_Primes_2022September01_.cpp</file>
      <line>1006</line>
    </frame>
    <frame>
      <ip>0x10D3FA</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>Test_Unit_CantierePrimes::readBy_OperatorSquares(unsigned long long)</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>Test_Unit_CantierePrimes.cpp</file>
      <line>74</line>
    </frame>
    <frame>
      <ip>0x10D01C</ip>
      <obj>/home/patty/src/GitHubSandBox/PostMRW/TestConsole/bin/Debug/TestConsole</obj>
      <fn>main</fn>
      <dir>/home/patty/src/GitHubSandBox/PostMRW/TestConsole</dir>
      <file>main.cpp</file>
      <line>39</line>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

