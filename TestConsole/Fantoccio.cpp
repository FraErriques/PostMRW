//#include "mysql_connection.h"
//#include <cppconn/driver.h>
//#include <cppconn/exception.h>
//#include <cppconn/resultset.h>
//#include <cppconn/statement.h>
//#include <cppconn/prepared_statement.h>
//#include "../Common/DbConnectionService/dbCall.h"
//#include "../Process/MonteCarlo_wrap/MonteCarlo_wrap.h"
//#include "../Entity/Integration/Integration.h"
//

#include "../Common/LogFs_wrap/LogFs_wrap.h"
#include "../Common/StringBuilder/StringBuilder.h"
#include "../Entity/PrimesFinder/Primes.h"
#include "../Common/Config_wrap/Config_wrap.h"


double rettangoli()
{
    Common::LogWrappers::SectionOpen("Entity::Integration::rettangoli()", 0);
    // NB. ci vuole !!! altimenti undefined_reference in Common:: !!
    Common::ConfigurationService * PrimeConfig = Process::getNamedConfiguration("./PrimeConfig.txt");// name for Prime-configuration.

    for( double x=0.0; x<6; x+=1)
    {
        double res = 1;
        Common::StringBuilder sb( 200);
        sb.append("cumulated integral value = ");
        std::string * numStr = Common::StrManipul::doubleToString(res);
        sb.append( *numStr);
        Common::LogWrappers::SectionContent( sb.str().c_str(), 0);
        delete numStr;
        //Common::dbCall::cantiere_intg_Sin_0_Pi_INSERT_SINGLE( res);
        //bool isThereInsertionError = Common::dbCall::cantiere_numericTable_INSERT_SINGLE( res);
    }
    //
    Common::LogWrappers::SectionClose();
    return 0.0;
}


//
//
//void fantoccio()// NB. ci vuole !!! altimenti undefined_reference in Common:: !!
//{
//    try
//    {
//        sql::Driver *driver;
//        sql::Connection *con;
//        sql::Statement *stmt;
//        sql::ResultSet *res;
//
//        // Create a connection : steps follow:
//        driver = get_driver_instance();// get the driver
//    }
//    catch(...)
//    {
//    }
//}// end fantoccio
//
//
//double fantoccio_rettangoli()
//{
//    Common::MonteCarlo * monteCarlo = new Common::MonteCarlo();
//    thread_local Common::RandCpp11 * randCpp11 = new Common::RandCpp11();
//    for(int c=0; c<100; c++)
//    {
//        std::cout<<"\n\t random Common::RandCpp11 extraction at step "<<c<<" : "<< randCpp11->rand();
//    }
//    std::cout << std::endl;
//    delete randCpp11;
//
//    Common::LogWrappers::SectionOpen("Entity::Integration::rettangoli()", 0);
//    Common::LogWrappers::SectionContent("what I am doing...", 0);
//    Common::LogWrappers::SectionClose();
//    Common::dbCall::cantiere_intg_Sin_0_Pi_INSERT_SINGLE( 5);
//    return 0.0;
//}

/*

 1,9444444444444441E-002
 3,5416666666666666E-002
 4,1666666666666644E-002
 2,5000000000000005E-002
 3,2638888888888898E-002
 3,4722222222222224E-002
 3,4027777777777782E-002
 3,4027777777777782E-002
 2,9166666666666678E-002
 3,6111111111111108E-002
 2,6388888888888896E-002
 3,3333333333333340E-002
 2,9861111111111123E-002
 2,9861111111111123E-002
 2,7777777777777787E-002
 2,9166666666666678E-002
 3,2638888888888898E-002
 3,4722222222222224E-002
 3,9583333333333318E-002
 4,0277777777777760E-002
 2,9861111111111123E-002
 3,4027777777777782E-002
 4,1666666666666644E-002
 3,1250000000000014E-002
 3,6111111111111108E-002
 3,0555555555555568E-002
 3,9583333333333318E-002
 3,7499999999999992E-002
 3,1250000000000014E-002
 2,5694444444444450E-002
 1,6666666666666659E-002
 0,0000000000000000E+000
 ######

 2,0120724346076465E-003
4,1247484909456749E-003
3,3199195171026170E-003
2,4144869215291759E-003
3,8229376257545287E-003
2,9175050301810876E-003
4,6277665995975844E-003
3,0181086519114699E-003
3,1187122736418523E-003
2,3138832997987935E-003
2,6156941649899406E-003
2,5150905432595582E-003
3,2193158953722346E-003
3,3199195171026170E-003
3,5211267605633817E-003
3,8229376257545287E-003
4,0241448692152930E-003
4,0241448692152930E-003
3,9235412474849110E-003
3,2193158953722346E-003
3,0181086519114699E-003
3,1187122736418523E-003
2,7162977867203229E-003
3,8229376257545287E-003
3,4205231388329993E-003
2,5150905432595582E-003
3,1187122736418523E-003
2,1126760563380288E-003
3,2193158953722346E-003
3,8229376257545287E-003
2,9175050301810876E-003
3,5211267605633817E-003
3,1187122736418523E-003
4,0241448692152930E-003
2,6156941649899406E-003
2,9175050301810876E-003
3,1187122736418523E-003
2,9175050301810876E-003
3,0181086519114699E-003
2,5150905432595582E-003
3,5211267605633817E-003
3,2193158953722346E-003
3,7223340040241464E-003
4,6277665995975844E-003
2,9175050301810876E-003
3,1187122736418523E-003
4,1247484909456749E-003
3,3199195171026170E-003
3,2193158953722346E-003
2,6156941649899406E-003
3,1187122736418523E-003
3,8229376257545287E-003
3,9235412474849110E-003
3,3199195171026170E-003
3,6217303822937640E-003
2,9175050301810876E-003
3,6217303822937640E-003
3,1187122736418523E-003
3,0181086519114699E-003
4,5271629778672025E-003
3,6217303822937640E-003
3,6217303822937640E-003
3,2193158953722346E-003
4,2253521126760568E-003
2,0120724346076465E-003
2,4144869215291759E-003
3,6217303822937640E-003
3,0181086519114699E-003
3,2193158953722346E-003
3,7223340040241464E-003
3,7223340040241464E-003
3,1187122736418523E-003
2,5150905432595582E-003
2,8169014084507052E-003
3,2193158953722346E-003
3,3199195171026170E-003
3,6217303822937640E-003
3,8229376257545287E-003
3,1187122736418523E-003
2,8169014084507052E-003
3,6217303822937640E-003
3,3199195171026170E-003
4,3259557344064387E-003
3,0181086519114699E-003
2,3138832997987935E-003
3,2193158953722346E-003
2,5150905432595582E-003
3,6217303822937640E-003
2,3138832997987935E-003
2,4144869215291759E-003
3,3199195171026170E-003
2,8169014084507052E-003
3,0181086519114699E-003
3,8229376257545287E-003
3,0181086519114699E-003
3,4205231388329993E-003
3,0181086519114699E-003
3,2193158953722346E-003
3,8229376257545287E-003
3,9235412474849110E-003
3,7223340040241464E-003
3,4205231388329993E-003
2,9175050301810876E-003
2,6156941649899406E-003
2,8169014084507052E-003
4,1247484909456749E-003
2,8169014084507052E-003
2,4144869215291759E-003
3,1187122736418523E-003
2,7162977867203229E-003
3,9235412474849110E-003
3,5211267605633817E-003
3,8229376257545287E-003
3,6217303822937640E-003
3,4205231388329993E-003
3,5211267605633817E-003
3,3199195171026170E-003
2,8169014084507052E-003
3,8229376257545287E-003
2,6156941649899406E-003
2,8169014084507052E-003
4,2253521126760568E-003
3,1187122736418523E-003
3,2193158953722346E-003
3,1187122736418523E-003
2,9175050301810876E-003
3,3199195171026170E-003
3,0181086519114699E-003
4,5271629778672025E-003
2,8169014084507052E-003
2,8169014084507052E-003
2,3138832997987935E-003
4,0241448692152930E-003
3,2193158953722346E-003
*/
